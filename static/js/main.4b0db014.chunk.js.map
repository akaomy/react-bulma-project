{"version":3,"sources":["components/HeaderMenuItem.js","components/Header.js","components/Footer.js","components/Counter/LeftHand.js","components/Counter/RightHand.js","components/Counter/StepConfig.js","components/Counter2/SimpleCounter.js","components/Counter2/CounterPlusTen.js","components/Counter2/CounterRandomOneTen.js","components/Counter2/CounterTitle.js","components/Counter2/CounterWithAddBtn.js","components/Counter2/Counter2.js","components/Counter4/CounterNum.js","components/Counter4/Counter4.js","components/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["HeaderMenuItem","props","href","onClick","actionItem","menuItem","className","Header","role","aria-label","headerLogo","id","menuItems","map","item","key","action","Footer","footerLogo","LeftHand","e","changeCount","count","step","RightHand","rightData","StepConfig","value","onChange","onStepChange","target","SimpleCounter","useState","counter","setCount","CounterPlusTen","CounterRandomOneTen","Math","floor","random","CounterTitle","CounterWithAddBtn","counters","seCounters","el","i","round","Counter2","CounterNum","minus","plus","index","resetCounter","deleteCounter","Counter4","setCounters","plusOne","newCounters","console","log","minusOne","splice","MainContent","setStep","users","setUsers","newCount","val","fetch","then","response","json","name","App","sn","src","width","height","alt","btn","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4b0db014.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction HeaderMenuItem(props) {\n    const displayTextMenuItem = () => {\n        props.actionItem(props.menuItem)\n    }\n    return (\n        <a\n            href=\"#\"\n            onClick={displayTextMenuItem}\n            className=\"navbar-item\"\n        >\n            {props.menuItem}\n        </a>\n    )\n}\n\n\nexport default HeaderMenuItem;","import React from \"react\";\nimport HeaderMenuItem from \"./HeaderMenuItem\";\n\nfunction Header(props) {\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"https://bulma.io\">\n                    {props.headerLogo}\n                </a>\n            </div>\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    {props.menuItems.map(item => {\n                        return (\n                            <HeaderMenuItem\n                                key={item}\n                                menuItem={item}\n                                actionItem={props.action}\n                            />\n                        )\n                    })}\n                </div>\n            </div>\n        </nav>\n    )\n}\n\n\nexport default Header;","import React from \"react\";\nimport '../App.css'\n\nfunction Footer(props) {\n    return (\n        <footer className=\"footer\">\n            <div className=\"content has-text-centered\">\n                <p>\n                    <strong>Bulma</strong> by <a href=\"https://jgthms.com\">Jeremy Thomas</a>. The source code is\n                    licensed\n                    <a href=\"http://opensource.org/licenses/mit-license.php\">MIT</a>. The website content\n                    is licensed <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY NC SA 4.0</a>.\n                </p>\n                <p>\n                    {props.menuItems.map(item =>\n                        <li key={item} className={\"navbar-footer-wrapper\"}>\n                            <a className=\"navbar-item\">{item}</a>\n                        </li>\n                    )}\n                </p>\n                <p>{props.footerLogo}</p>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nfunction LeftHand(props) {\n\n    const increaseVal = () => {\n        props.changeCount(props.count + props.step);\n    }\n\n    const decreaseVal = (e) => {\n        props.changeCount(props.count - props.step); \n    }\n\n    return (\n        <div>\n            <button className=\"button\" onClick={decreaseVal}>-</button>\n            <button className=\"button\" onClick={increaseVal}>+</button>\n        </div>\n    )\n}\n\nexport default LeftHand;","import React from 'react';\n\nfunction RightHand(props) {\n\n    return (\n        <div className=\"level-item\">{props.rightData}</div>\n    )\n}\n\nexport default RightHand;","import React from 'react';\n\nfunction StepConfig(props) {\n\n    return (\n        <div>\n            <label> Enter step: </label>\n            <input\n                value={props.step}\n                onChange={(e)=> {\n                    // add check if there is letters are entered\n                    // > error msg: only numbers are allowed\n                    props.onStepChange(+e.target.value);}}\n            />\n        </div>\n    )\n}\n\nexport default StepConfig;","import React, { useState } from \"react\";\n\nexport default function SimpleCounter() {\n\n    const [counter, setCount] = useState(0);\n\n    const add = () => {\n        setCount(counter + 1);\n    }\n\n    const remove = () => {\n        setCount(counter - 1)\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <p>Simple Counter</p>\n                <p>{counter}</p>\n                <button onClick={add} className=\"button\">add</button>\n                <button onClick={remove} className=\"button\">remove</button>\n            </div>\n        </>\n    )\n}","import React, { useState } from \"react\";\n\nexport default function CounterPlusTen() {\n\n    const [counter, setCount] = useState(0);\n\n    const add = () => {\n        setCount(counter + 10);\n    }\n\n    const remove = () => {\n        setCount(counter - 10)\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <p>10 Counter</p>\n                <p>{counter}</p>\n                <button onClick={add} className=\"button\">add</button>\n                <button onClick={remove} className=\"button\">remove</button>\n            </div>\n        </>\n    )\n}","import React, { useState } from \"react\";\n\nexport default function CounterRandomOneTen() {\n\n    const [counter, setCount] = useState(0);\n\n    const add = () => {\n        setCount(counter + Math.floor(Math.random() * Math.floor(10)));\n    }\n\n    const remove = () => {\n        setCount(counter - Math.floor(Math.random() * Math.floor(10)));\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <p>Random Counter (range 1 to 10)</p>\n                <p>{counter}</p>\n                <button onClick={add} className=\"button\">add</button>\n                <button onClick={remove} className=\"button\">remove</button>\n            </div>\n        </>\n    )\n}","import React from \"react\";\n\nexport default function CounterTitle(props) {\n    // const {\n    //     addCounter,\n    //     countNumber\n    // } = this.props;\n\n    return(\n        <button className=\"button\">{props.count}</button>\n    )\n}","import React, {useState} from 'react';\nimport CounterTitle from \"./CounterTitle\";\n\nexport default function CounterWithAddBtn() {\n\n    const [counters, seCounters] = useState([2,3])\n\n    const addCounter = () => {\n        const randNum = Math.round(Math.random() * 10)\n        seCounters([...counters, 'one more']);\n    };\n\n    // const removeCounter = () => {\n    //     seCounters([])\n    // }\n\n    return (\n        <>\n            <p>Counter with add btn:</p>\n            {counters.map((el,i) =>\n                <CounterTitle\n                    count={el}\n                    key={i}\n                />\n            )}\n            <button\n                className=\"button\"\n                onClick={addCounter}>\n                Cick to add one more counter\n            </button>\n            {/*<button*/}\n            {/*    className=\"button\"*/}\n            {/*    onClick={removeCounter}>*/}\n            {/*    Cick to delete*/}\n            {/*</button>*/}\n        </>\n    )\n}","import React, { useState } from \"react\";\nimport SimpleCounter from \"./SimpleCounter\";\nimport CounterPlusTen from \"./CounterPlusTen\";\nimport CounterRandomOneTen from \"./CounterRandomOneTen\";\nimport CounterWithAddBtn from \"./CounterWithAddBtn\";\n\nexport default function Counter2() {\n\n    return (\n        <>\n            <SimpleCounter />\n            <hr />\n            <CounterPlusTen />\n            <hr />\n            <CounterRandomOneTen />\n            <hr />\n            <CounterWithAddBtn />\n        </>\n    )\n}","import React from \"react\";\nimport '../../App.css'\n\nexport default function CounterNum(props) {\n    const {\n        minus,\n        plus,\n        count,\n        index,\n        resetCounter,\n        deleteCounter\n    } = props;\n    return (\n        <>\n            {/*index: {props.index}*/}\n            <button onClick={() => minus(index)} className='button cntr4'>-</button>\n            <span className='cntr4'>{count}</span>\n            <button onClick={() => plus(index)} className='button cntr4'> + </button>\n            <button onClick={() => deleteCounter(index)} className='button cntr4'>delete</button>\n            <button onClick={() => resetCounter(index)} className='button cntr4'>reset</button>\n\n            <br/>\n        </>\n    )\n}","import React, { useState } from 'react';\nimport CounterNum from './CounterNum';\n\nexport default function Counter4() {\n\n    const [counters, setCounters] = useState([0]);\n    const addCounter = () => {\n        setCounters([...counters, Math.round(Math.random() * 10)])\n    }\n    const plusOne = (index) => {\n        const newCounters = [...counters];\n        newCounters[index] += 1;\n        setCounters(newCounters);\n        console.log(index)\n    }\n    const minusOne = (index) => {\n        const newCounters = [...counters];\n        newCounters[index] -= 1;\n        setCounters(newCounters);\n        console.log(index)\n    }\n    const deleteCounter = (index) => {\n        const newCounters = [...counters];\n        newCounters.splice(index, 1);\n        setCounters(newCounters);\n        console.log(newCounters);\n    }\n    const resetCounter = (index) => {\n        const newCounters = [...counters];\n        newCounters[index] -= 1;\n        setCounters(newCounters);\n        console.log(index)\n    }\n\n    return (\n        <>\n            {counters.map((el, i) =>\n                <CounterNum\n                    count={el}\n                    key={i}\n                    index={i}\n                    plus={plusOne}\n                    minus={minusOne}\n                    deleteCounter={deleteCounter}\n                    resetCounter={resetCounter}\n\n                />\n            )}\n            <button\n                className='button'\n                onClick={addCounter}\n            >\n                Add Counter\n            </button>\n        </>\n    )\n}","import React, { useState } from \"react\";\nimport '../App.css'\nimport LeftHand from \"./Counter/LeftHand\";\nimport RightHand from \"./Counter/RightHand\";\nimport TodoInput from \"./ToDo/TodoInput\";\nimport ListOfItems from \"./ToDo/ListOfItems\";\nimport StepConfig from \"./Counter/StepConfig\";\nimport Counter2 from \"./Counter2/Counter2\";\nimport Counter4 from \"./Counter4/Counter4\";\n\nfunction MainContent() {\n\n    const [count, setCount] = useState(0);\n    const [step, setStep] = useState(2);\n\n    const clickHandler = (newCount) => {\n        setCount(newCount);\n    }\n\n    const onStepChange = (val) => {\n        setStep(val);\n    }\n    \n    const handleChange = (e) => {\n        let userInput = e.target.value;\n        return <p>{userInput}</p>\n    }\n\n    const load = () => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json => setUsers(json))\n    }\n\n    const [users, setUsers] = useState([]);\n\n    return (\n        <>\n            <div className=\"tile is-ancestor\">\n                <div className=\"tile is-parent\">\n                    <article className=\"tile is-child box\">\n                        <p className=\"title\">Counter</p>\n                        <p>Enter number of steps you want to decrease or increase counter. Default step is 2.</p>\n                        <div className=\"level-item counter-pdg1\">\n                            <LeftHand\n                                count={count}\n                                changeCount={clickHandler}\n                                step={step}\n                            />\n                            <RightHand rightData={count} />\n                        </div>\n                        <div className=\"level-item counter-pdg2\">\n                            <StepConfig onStepChange={onStepChange}/>\n                        </div>\n                        <div id=\"error-msg\"></div>\n                    </article>\n                </div>\n                <div className=\"tile is-parent\">\n                    <article className=\"tile is-child box\">\n                        <p className=\"title\">Counter 2</p>\n                        <Counter2 />\n                    </article>\n                </div>\n            </div>\n            <div className=\"tile is-parent\">\n                <article className=\"tile is-child box\">\n                    <p className=\"title\">Counter4</p>\n                    <Counter4 />\n                </article>\n                <article className=\"tile is-child box\">\n                        <div className=\"content\">\n                            <p className=\"title\">Fetching data on btn click</p>\n                            <button className=\"button\" onClick={load}>fetch data</button>\n                            <ul>\n                                {users.map(el => <li key={el.id}>{el.name}</li>)}\n                            </ul>\n                        </div>\n                </article>\n            </div>\n            <div className=\"tile is-ancestor\">\n                <div className=\"tile is-parent\">\n                    {/* TODO */}\n                    {/* <article className=\"tile is-child box\">\n                        <p className=\"title\">ToDo list</p>\n                        <section className=\"box\">\n                            <TodoInput handleClick={handleChange}/>\n                            <ListOfItems />\n                        </section>\n                    </article> */}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default MainContent;","import React from 'react';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport './App.css';\nimport Header from './components/Header'\nimport Hero from './components/Hero'\nimport Footer from './components/Footer'\nimport MainContent from './components/MainContent'\n\nfunction App() {\n\n    const menuItems = ['Home', \"About\", \"Contact\"];\n    const sn = (<img src=\"https://bulma.io/images/bulma-logo.png\"\n                     width=\"112\"\n                     height=\"28\"\n                     alt=\"logo\"\n                />);\n\n    const displayText = (btn) => {\n        console.log(`${btn} has been clicked`)\n    }\n  return (\n    <div className=\"App\">\n      <Header\n          action={displayText}\n          menuItems={menuItems}\n          headerLogo={sn}\n      />\n      {/*<Hero*/}\n      {/*    action={displayText}*/}\n      {/*/>*/}\n      <MainContent />\n      <Footer\n          menuItems={menuItems}\n          footerLogo={sn}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}